//
// student.c
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "student.h"
#include "encrypt.h"


const char* STUFILE = "studentdata.txt";

// keeps track of the number of students in the students array
int numStudents = 0;

// holds the student pointer array
Student* students[100] = {0};


void createStudent(char* fname, char* lname, int age, int id)
{
  // createStudent dynamically creates a Student on the heap and adds that
  // student to the student array
  //  - the firstName and lastName strings should be dynamically created
  //    based on the size of the fname and lname arg
  students[numStudents] = (Student*)malloc(sizeof(Student));
  char* firstName = (char*)malloc(sizeof(fname));
  char* lastName = (char*)malloc(sizeof(lname));
  students[numStudents]->firstName = firstName;
  students[numStudents]->lastName = lastName;
  students[numStudents]->age = age;
  students[numStudents]->id = id;
  numStudents++;
}


void deleteStudent(Student* student)
{
  // free the memory associated with a student including the strings
  free(student);  
  free(student->firstName);
  free(student->lastName);
}


void deleteStudents()
{
  // iterate over the students array deleting every student and setting the pointer
  // values to 0 and adjusting the numStudents to 0
  for(int i = 0; i < numStudents; i++) {
    students[numStudents]->firstName = 0;
    students[numStudents]->lastName = 0;
    students[numStudents]->age = 0;
    students[numStudents]->id = 0;
  }
  numStudents = 0;
}


void saveStudents(int key)
{
  FILE* sf;
  //student file

  sf = fopen("studentdata.txt", "w");
  // save all students in the student array to a file 'studentdata.txt' overwriting
  // any existing file
  //   - the format of the file is one line per student as follows fname lname age id:
  //       tom thumb 15 1234 
  //       james dean 21 2345 
  //       katy jones 18 4532 
  if (sf) {
    for(int i = 0; i < numStudents; i++) {
      fprintf(sf, "%s %s %d %ld\n", students[i]->firstName, students[i]->lastName, students[i]->age, students[i]->id);
      printf("Saving: %s %s %d %ld\n", students[i]->firstName, students[i]->lastName, students[i]->age, students[i]->id);
    }
    fclose(sf);
  } 
}


void loadStudents(int key)
{
  // load the students from the data file overwriting all existing students in memory
  FILE* sf;
  deleteSTudents();      fprintf(sf, "%s %s %d %ld\n", students[i]->firstName, students[i]->lastName, students[i]->age, students[i]->id);
=
  sf = fopen("studentdata.txt", "r");
  if(sf) {
    while (1) {
      char* fname; char* lname; int age; long int id; 
      if(fscanf(sf, "%s %s %d %ld\n", &fname, &lname, &age, &id) == 4) {
        
      }
      else
        break;
    }
    fclose(sf);
  }
}


void printStudent(Student* student)
{
  printf("  Student: %s %s\n", student->firstName, student->lastName);
  printf("    age: %d\n", student->age);
  printf("    id: %ld\n", student->id); 
}


void printStudents()
{
  for (int i = 0; i < numStudents; i++) {
    printf("\n----- student %d ------\n", i);
    printStudent(students[i]);
  }
}




